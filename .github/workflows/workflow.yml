name: Build and Deploy

on:
  push:
    branches: [ "cicd", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ① 코드 체크아웃
      - uses: actions/checkout@v3

      # ② JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # ③ Gradle 캐시
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # ④ gradlew 실행 권한
      - run: chmod +x gradlew

      # ⑤ 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # ⑥ Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ⑦ 이미지 빌드·푸시
      - name: Build & Push Docker image
        run: |
          echo "🐳 Building image"
          docker build -t kdhdd/cicd:latest .
          echo "🚀 Pushing image"
          docker push kdhdd/cicd:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # ① 레포 파일 다운로드
      - uses: actions/checkout@v4

      # ② docker-compose.yml 전송
      - name: Copy compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/app/"

      # ③ 서버 재기동
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            set -e
            cd ~/app

            # Compose 플러그인 없으면 설치
            if ! docker compose version >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker-compose-plugin
            fi

            # 최신 이미지 풀·재시작
            docker compose pull
            docker compose down
            docker compose up -d
            docker image prune -f
